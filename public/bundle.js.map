{
  "version": 3,
  "sources": ["nacatamal-on/render/webgl2/rendering.js", "nacatamal-on/render/shapes/triangle.js", "nacatamal-on/render/shaders/shaders.js", "nacatamal-on/render/webgl2/compileShader.js", "nacatamal-on/render/webgl2/createProgram.js", "nacatamal-on/render/webgl2/createWebGLContext.js", "nacatamal-on/render/webgl2/getAttribLocation.js", "nacatamal-on/render/webgl2/index.js", "nacatamal-on/render/webgl2/draw.js", "src/main.ts"],
  "sourcesContent": ["const rendering = (gl, loop_callback) => {\r\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height)\r\n    gl.clearColor(0, 0, 0, 0);\r\n    gl.clear(gl.COLOR_BUFFER_BIT);\r\n    gl.flush();\r\n\r\n    loop_callback();\r\n    // window.requestAnimationFrame(rendering(gl, loop_callback));\r\n}\r\n\r\nexport default rendering;", "const triangle = (gl) => {\r\n\r\n    const array = new Float32Array([\r\n        150, 70,\r\n        100, 150,\r\n        200, 150\r\n    ]);\r\n    return {\r\n        data: array,\r\n        vertex: 3\r\n    };\r\n}\r\n\r\nexport default triangle;", "export const fragmentShaderSource = `#version 300 es\r\nprecision highp float;\r\n\r\nout vec4 outColor;\r\n\r\nvoid main() {\r\n  // gl_FragColor = vec4(1.0, 0.0, 1.0, 1.0);\r\n  outColor = vec4(1, 0, 0.5, 1);\r\n}\r\n`;\r\n\r\n// 3D\r\nexport const vertexShaderSource = `#version 300 es \r\n// an attribute is an input (in) to a vertex shader.\r\n// It will receive data from a buffer\r\nin vec4 a_position;\r\n// all shaders have a main function\r\nvoid main() {\r\n \r\n  // gl_Position is a special variable a vertex shader\r\n  // is responsible for setting\r\n  gl_Position = a_position;\r\n}\r\n`;\r\n\r\n// 2D\r\nexport const vertexShaderSource2D = `#version 300 es\r\n\r\nin vec2 a_position;\r\nuniform vec2 u_resolution;\r\n\r\nvoid main() {\r\n  vec2 zeroToOne = a_position / u_resolution;\r\n\r\n  vec2 zeroToTwo = zeroToOne * 2.0;\r\n\r\n  vec2 clipSpace = zeroToTwo - 1.0;\r\n  vec2 reverse_clip_space = clipSpace * vec2(1, -1);\r\n  gl_Position = vec4(reverse_clip_space, 0, 1);\r\n\r\n}\r\n`;", "const compileShader = (gl, type, source) => {\r\n    const shader = gl.createShader(type);\r\n    gl.shaderSource(shader, source);\r\n    gl.compileShader(shader);\r\n    \r\n    const success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n    if(success) {\r\n        return shader;\r\n    }\r\n    const typeShader = (35633 === type) ? 'VertexShader' : 'FragmentShader';\r\n    console.error(`Alg\u00FAn error con el ${typeShader}: `, gl.getShaderInfoLog(shader));\r\n    gl.deleteShader(shader)\r\n}\r\n\r\nexport default compileShader;", "import compileShader from \"./compileShader\";\r\n\r\nconst createProgram = (gl, vertexShaderSource, fragmentShaderSource) => {\r\n    const program = gl.createProgram();\r\n    const vertexShader = compileShader(gl, gl.VERTEX_SHADER, vertexShaderSource);\r\n    const fragmentShader = compileShader(gl, gl.FRAGMENT_SHADER, fragmentShaderSource);\r\n    gl.attachShader(program, vertexShader);\r\n    gl.attachShader(program, fragmentShader);\r\n    gl.linkProgram(program);\r\n\r\n    const success = gl.getProgramParameter(program, gl.LINK_STATUS);\r\n    if (success) {\r\n        gl.useProgram(program);\r\n        return program;\r\n    }\r\n\r\n    gl.deleteProgram(program);\r\n}\r\n\r\nexport default createProgram;", "// Obtenemos el contexto de la aplicaci\u00F3n\r\nconst createWebGlContext = ({parent, width, height}) => {\r\n    const canvas = document.querySelector(`#${parent}`);\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    const gl = canvas.getContext('webgl2');\r\n    if(!gl) {\r\n        console.error('No soportas el poder de webgl lo siento');\r\n    } else {\r\n        return gl;\r\n    }\r\n}\r\n\r\nexport default createWebGlContext;", "const getAttribLocation = (gl, program, attrib) => {\r\n    const positionAttributeLocation = gl.getAttribLocation(program, attrib);\r\n    // Preparamos el Buffer\r\n    // Se habilita positionAttribute Location\r\n    gl.enableVertexAttribArray(positionAttributeLocation);\r\n    return positionAttributeLocation;\r\n\r\n}\r\n\r\nexport default getAttribLocation;", "import createProgram from './createProgram';\r\nimport createWebGlContext from './createWebGLContext';\r\nimport compileShader from './compileShader';\r\nimport getAttribLocation from './getAttribLocation';\r\n\r\nexport {\r\n    createProgram,\r\n    createWebGlContext,\r\n    compileShader,\r\n    getAttribLocation,\r\n    \r\n}", "const draw = (gl, shape) => {\r\n    gl.bufferData(\r\n        gl.ARRAY_BUFFER,\r\n        shape.data,\r\n        gl.STATIC_DRAW);\r\n\r\n    gl.drawArrays(gl.TRIANGLES, 0, shape.vertex);\r\n}\r\n\r\nexport default draw;", "import rendering from '../nacatamal-on/render/webgl2/rendering';\r\nimport triangle from '../nacatamal-on/render/shapes/triangle';\r\n\r\nimport { fragmentShaderSource, vertexShaderSource, vertexShaderSource2D } from '../nacatamal-on/render/shaders/shaders';\r\nimport { createProgram, createWebGlContext, getAttribLocation } from '../nacatamal-on/render/webgl2';\r\nimport draw from '../nacatamal-on/render/webgl2/draw';\r\n\r\ndeclare var webglLessonsUI: any;\r\n\r\n// Variables globales de UI\r\nlet translation = [200, 150];\r\nlet angleInRadians = 0;\r\nlet scale = [1, 1];\r\n\r\n// Gl Est\u00E1 en contexto global\r\nconst gl = createWebGlContext({\r\n    parent: 'canvas',\r\n    width: 300,\r\n    height: 300\r\n});\r\n\r\nconst program = createProgram(gl, vertexShaderSource2D, fragmentShaderSource);\r\n\r\n// Attribs\r\nconst position_attrib = getAttribLocation(gl, program, 'a_position');\r\n\r\n// Uniforms\r\nconst u_resolution = gl.getUniformLocation(program, \"u_resolution\");\r\ngl.uniform2f(u_resolution, gl.canvas.width, gl.canvas.height);\r\n\r\n// Buffer position\r\nconst position_buffer = gl.createBuffer();\r\ngl.bindBuffer(gl.ARRAY_BUFFER, position_buffer);\r\n\r\nconst drawScene = () => {\r\n    rendering(gl, () => {\r\n        // Proyecci\u00F3n\r\n        // Se inicia la proyecci\u00F3n con el tama\u00F1o del canvas\r\n        // let matrix = m3.projection(gl.canvas.clientWidth, gl.canvas.clientHeight);\r\n        // matrix = m3.translate(matrix, translation[0], translation[1]);\r\n        // matrix = m3.rotate(matrix, angleInRadians);\r\n        // matrix = m3.scale(matrix, scale[0], scale[1]);\r\n\r\n\r\n        gl.vertexAttribPointer(position_attrib, 2, gl.FLOAT, gl.false, 0, 0);\r\n\r\n        const triangle_shape = triangle(gl);\r\n        draw(gl, triangle_shape);\r\n\r\n    });\r\n}\r\n\r\n// Set UI\r\nfunction updatePosition(index) {\r\n    return function (event, ui) {\r\n        translation[index] = ui.value;\r\n        drawScene();\r\n    };\r\n}\r\n\r\nfunction updateAngle(event, ui) {\r\n    var angleInDegrees = 360 - ui.value;\r\n    angleInRadians = angleInDegrees * Math.PI / 180;\r\n    drawScene();\r\n}\r\n\r\nfunction updateScale(index) {\r\n    return function (event, ui) {\r\n        scale[index] = ui.value;\r\n        drawScene();\r\n    };\r\n}\r\n\r\nwebglLessonsUI.setupSlider(\"#x\", { value: translation[0], slide: updatePosition(0), max: gl.canvas.width });\r\nwebglLessonsUI.setupSlider(\"#y\", { value: translation[1], slide: updatePosition(1), max: gl.canvas.height });\r\nwebglLessonsUI.setupSlider(\"#angle\", { slide: updateAngle, max: 360 });\r\nwebglLessonsUI.setupSlider(\"#scaleX\", { value: scale[0], slide: updateScale(0), min: -5, max: 5, step: 0.01, precision: 2 });\r\nwebglLessonsUI.setupSlider(\"#scaleY\", { value: scale[1], slide: updateScale(1), min: -5, max: 5, step: 0.01, precision: 2 });\r\n\r\ndrawScene();"],
  "mappings": ";;AAAA,QAAM,YAAY,CAAC,KAAI;AACnB,QAAG,SAAS,GAAG,GAAG,IAAG,OAAO,OAAO,IAAG,OAAO;AAC7C,QAAG,WAAW,GAAG,GAAG,GAAG;AACvB,QAAG,MAAM,IAAG;AACZ,QAAG;AAEH;AAAA;AAIJ,MAAO,oBAAQ;;;ACVf,QAAM,WAAW,CAAC;AAEd,UAAM,QAAQ,IAAI,aAAa;AAAA,MAC3B;AAAA,MAAK;AAAA,MACL;AAAA,MAAK;AAAA,MACL;AAAA,MAAK;AAAA;AAET,WAAO;AAAA,MACH,MAAM;AAAA,MACN,QAAQ;AAAA;AAAA;AAIhB,MAAO,mBAAQ;;;ACbR,QAAM,uBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAY7B,QAAM,qBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAc3B,QAAM,uBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AC1BpC,QAAM,gBAAgB,CAAC,KAAI,MAAM;AAC7B,UAAM,SAAS,IAAG,aAAa;AAC/B,QAAG,aAAa,QAAQ;AACxB,QAAG,cAAc;AAEjB,UAAM,UAAU,IAAG,mBAAmB,QAAQ,IAAG;AACjD,QAAG;AACC,aAAO;AAAA;AAEX,UAAM,aAAc,UAAU,OAAQ,iBAAiB;AACvD,YAAQ,MAAM,uBAAuB,gBAAgB,IAAG,iBAAiB;AACzE,QAAG,aAAa;AAAA;AAGpB,MAAO,wBAAQ;;;ACZf,QAAM,gBAAgB,CAAC,KAAI,qBAAoB;AAC3C,UAAM,WAAU,IAAG;AACnB,UAAM,eAAe,sBAAc,KAAI,IAAG,eAAe;AACzD,UAAM,iBAAiB,sBAAc,KAAI,IAAG,iBAAiB;AAC7D,QAAG,aAAa,UAAS;AACzB,QAAG,aAAa,UAAS;AACzB,QAAG,YAAY;AAEf,UAAM,UAAU,IAAG,oBAAoB,UAAS,IAAG;AACnD,QAAI;AACA,UAAG,WAAW;AACd,aAAO;AAAA;AAGX,QAAG,cAAc;AAAA;AAGrB,MAAO,wBAAQ;;;AClBf,QAAM,qBAAqB,CAAC,CAAC,QAAQ,OAAO;AACxC,UAAM,SAAS,SAAS,cAAc,IAAI;AAC1C,WAAO,QAAQ;AACf,WAAO,SAAS;AAChB,UAAM,MAAK,OAAO,WAAW;AAC7B,QAAG,CAAC;AACA,cAAQ,MAAM;AAAA;AAEd,aAAO;AAAA;AAAA;AAIf,MAAO,6BAAQ;;;ACbf,QAAM,oBAAoB,CAAC,KAAI,UAAS;AACpC,UAAM,4BAA4B,IAAG,kBAAkB,UAAS;AAGhE,QAAG,wBAAwB;AAC3B,WAAO;AAAA;AAIX,MAAO,4BAAQ;;;;;ACTf,QAAM,OAAO,CAAC,KAAI;AACd,QAAG,WACC,IAAG,cACH,MAAM,MACN,IAAG;AAEP,QAAG,WAAW,IAAG,WAAW,GAAG,MAAM;AAAA;AAGzC,MAAO,eAAQ;;;ACCf,MAAI,cAAc,CAAC,KAAK;AACxB,MAAI,iBAAiB;AACrB,MAAI,QAAQ,CAAC,GAAG;AAGhB,QAAM,KAAK,2BAAmB;AAAA,IAC1B,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,QAAQ;AAAA;AAGZ,QAAM,UAAU,sBAAc,IAAI,sBAAsB;AAGxD,QAAM,kBAAkB,0BAAkB,IAAI,SAAS;AAGvD,QAAM,eAAe,GAAG,mBAAmB,SAAS;AACpD,KAAG,UAAU,cAAc,GAAG,OAAO,OAAO,GAAG,OAAO;AAGtD,QAAM,kBAAkB,GAAG;AAC3B,KAAG,WAAW,GAAG,cAAc;AAE/B,QAAM,YAAY;AACd,sBAAU,IAAI;AASV,SAAG,oBAAoB,iBAAiB,GAAG,GAAG,OAAO,GAAG,OAAO,GAAG;AAElE,YAAM,iBAAiB,iBAAS;AAChC,mBAAK,IAAI;AAAA;AAAA;AAMjB,0BAAwB;AACpB,WAAO,SAAU,OAAO;AACpB,kBAAY,SAAS,GAAG;AACxB;AAAA;AAAA;AAIR,uBAAqB,OAAO;AACxB,QAAI,iBAAiB,MAAM,GAAG;AAC9B,qBAAiB,iBAAiB,KAAK,KAAK;AAC5C;AAAA;AAGJ,uBAAqB;AACjB,WAAO,SAAU,OAAO;AACpB,YAAM,SAAS,GAAG;AAClB;AAAA;AAAA;AAIR,iBAAe,YAAY,MAAM,CAAE,OAAO,YAAY,IAAI,OAAO,eAAe,IAAI,KAAK,GAAG,OAAO;AACnG,iBAAe,YAAY,MAAM,CAAE,OAAO,YAAY,IAAI,OAAO,eAAe,IAAI,KAAK,GAAG,OAAO;AACnG,iBAAe,YAAY,UAAU,CAAE,OAAO,aAAa,KAAK;AAChE,iBAAe,YAAY,WAAW,CAAE,OAAO,MAAM,IAAI,OAAO,YAAY,IAAI,KAAK,IAAI,KAAK,GAAG,MAAM,MAAM,WAAW;AACxH,iBAAe,YAAY,WAAW,CAAE,OAAO,MAAM,IAAI,OAAO,YAAY,IAAI,KAAK,IAAI,KAAK,GAAG,MAAM,MAAM,WAAW;AAExH;",
  "names": []
}
